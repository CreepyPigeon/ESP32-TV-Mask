#include "BluetoothSerial.h"
#include <FastLED.h>
#include <string>

#define LEDS_PER_LINE 17
#define DATA_PIN 16
#define LINES 13
#define NUM_LEDS 221
CRGB leds[NUM_LEDS];
#define BLINK_TIME 4000

String device_name = "ESP32-TV";
int num = 0;
String num_string = "";
unsigned long currenttime=0; 

  CRGB heart[NUM_LEDS] = {
              CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 255, 255), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 0, 0), CRGB(255, 255, 255), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 0, 0), CRGB(255, 255, 255), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(1, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(0, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(1, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0)
        };

  CRGB intermission[NUM_LEDS] = {
              CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(1, 26, 58), CRGB(1, 26, 58), CRGB(1, 26, 58), CRGB(244, 244, 255), CRGB(244, 244, 255), CRGB(244, 244, 255), CRGB(1, 26, 58), CRGB(1, 26, 58), CRGB(1, 26, 58), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(1, 26, 58), CRGB(1, 26, 58), CRGB(1, 26, 58), CRGB(244, 244, 255), CRGB(244, 244, 255), CRGB(244, 244, 255), CRGB(1, 26, 58), CRGB(0, 23, 58), CRGB(1, 26, 58), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(1, 26, 58), CRGB(1, 26, 58), CRGB(1, 26, 58), CRGB(244, 244, 255), CRGB(244, 244, 255), CRGB(244, 244, 255), CRGB(1, 26, 58), CRGB(1, 26, 58), CRGB(1, 26, 58), CRGB(244, 244, 255), CRGB(244, 244, 255), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 255, 254), CRGB(0, 255, 254), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 0, 255), CRGB(255, 0, 255), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 255), CRGB(0, 0, 255), CRGB(0, 0, 255), CRGB(0, 0, 255), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 255), CRGB(252, 7, 255), CRGB(0, 255, 0), CRGB(0, 252, 0), CRGB(3, 251, 72), CRGB(7, 251, 255), CRGB(0, 255, 254), CRGB(255, 254, 0), CRGB(255, 254, 0), CRGB(255, 254, 0), CRGB(241, 240, 255), CRGB(244, 244, 255), CRGB(0, 0, 255), CRGB(0, 0, 255), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 255), CRGB(255, 0, 255), CRGB(0, 255, 0), CRGB(0, 255, 0), CRGB(0, 255, 73), CRGB(0, 255, 255), CRGB(0, 255, 254), CRGB(255, 254, 0), CRGB(255, 255, 0), CRGB(255, 254, 0), CRGB(246, 246, 255), CRGB(244, 244, 255), CRGB(0, 0, 255), CRGB(0, 0, 255), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 255), CRGB(255, 0, 255), CRGB(0, 255, 0), CRGB(0, 255, 0), CRGB(0, 255, 0), CRGB(0, 255, 255), CRGB(0, 255, 254), CRGB(255, 254, 0), CRGB(255, 254, 0), CRGB(255, 254, 0), CRGB(244, 244, 255), CRGB(244, 244, 255), CRGB(0, 0, 255), CRGB(0, 0, 255), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 255), CRGB(255, 0, 255), CRGB(0, 255, 0), CRGB(0, 255, 0), CRGB(0, 255, 0), CRGB(0, 255, 254), CRGB(0, 255, 254), CRGB(255, 254, 0), CRGB(255, 254, 0), CRGB(255, 254, 0), CRGB(244, 244, 255), CRGB(244, 244, 255), CRGB(0, 0, 255), CRGB(0, 0, 255), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(251, 1, 51), CRGB(255, 0, 255), CRGB(255, 0, 255), CRGB(0, 255, 0), CRGB(0, 255, 0), CRGB(0, 255, 0), CRGB(0, 255, 254), CRGB(0, 255, 254), CRGB(255, 254, 0), CRGB(255, 254, 0), CRGB(255, 254, 0), CRGB(244, 244, 255), CRGB(244, 244, 255), CRGB(0, 0, 255), CRGB(0, 0, 255), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(251, 1, 51), CRGB(255, 0, 255), CRGB(255, 0, 255), CRGB(0, 255, 0), CRGB(0, 255, 0), CRGB(0, 255, 0), CRGB(0, 255, 254), CRGB(0, 255, 254), CRGB(255, 254, 0), CRGB(255, 254, 0), CRGB(255, 254, 0), CRGB(244, 244, 255), CRGB(244, 244, 255), CRGB(0, 0, 255), CRGB(0, 0, 255), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(251, 1, 51), CRGB(255, 0, 255), CRGB(255, 0, 255), CRGB(0, 255, 0), CRGB(0, 255, 0), CRGB(0, 255, 0), CRGB(0, 255, 254), CRGB(0, 255, 254), CRGB(255, 254, 0), CRGB(255, 254, 0), CRGB(255, 254, 0), CRGB(244, 244, 255), CRGB(244, 244, 255), CRGB(0, 0, 255), CRGB(0, 0, 255), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(251, 1, 51), CRGB(255, 0, 255), CRGB(255, 0, 255), CRGB(0, 255, 0), CRGB(0, 255, 0), CRGB(0, 255, 0), CRGB(0, 255, 254), CRGB(0, 255, 254), CRGB(255, 254, 0), CRGB(255, 254, 0), CRGB(255, 254, 0), CRGB(244, 244, 255), CRGB(244, 244, 255), CRGB(0, 0, 255), CRGB(0, 0, 255), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 255), CRGB(255, 0, 255), CRGB(0, 255, 0), CRGB(0, 255, 0), CRGB(0, 255, 0), CRGB(0, 255, 254), CRGB(0, 255, 254), CRGB(255, 254, 0), CRGB(255, 254, 0), CRGB(255, 254, 0), CRGB(244, 244, 255), CRGB(244, 244, 255)
        };

  CRGB face3[NUM_LEDS] = {

    };
  CRGB face3B1[NUM_LEDS] = {

  };
  CRGB face3B2[NUM_LEDS] = {

  };
  CRGB face3B3[NUM_LEDS] = {

  };
  CRGB face1[NUM_LEDS] = {

  };
  CRGB face1B1[NUM_LEDS] = {

  };
  CRGB face1B2[NUM_LEDS] = {

  };
  CRGB face1B3[NUM_LEDS] = {

  };
  CRGB puka[NUM_LEDS] = {

  };
  CRGB dino[NUM_LEDS] = {
              CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(252, 254, 252), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(252, 254, 252), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(0, 0, 0), CRGB(252, 254, 252), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(0, 0, 0), CRGB(252, 254, 252), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(252, 254, 252), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0)
        };
  CRGB eye[NUM_LEDS] = {

        };
  CRGB flower[NUM_LEDS] = {
              CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(110, 164, 53), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(61, 99, 21), CRGB(61, 99, 21), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(132, 11, 31), CRGB(132, 11, 31), CRGB(132, 11, 31), CRGB(0, 0, 0), CRGB(34, 58, 7), CRGB(74, 126, 18), CRGB(74, 126, 18), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(61, 99, 21), CRGB(34, 58, 7), CRGB(132, 11, 31), CRGB(134, 13, 33), CRGB(134, 13, 33), CRGB(132, 11, 31), CRGB(0, 0, 0), CRGB(34, 58, 7), CRGB(34, 58, 7), CRGB(34, 58, 7), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(34, 58, 7), CRGB(34, 58, 7), CRGB(132, 11, 31), CRGB(175, 28, 53), CRGB(175, 28, 53), CRGB(134, 13, 33), CRGB(132, 11, 31), CRGB(96, 10, 24), CRGB(34, 58, 7), CRGB(34, 58, 7), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(145, 15, 36), CRGB(145, 15, 36), CRGB(175, 28, 53), CRGB(175, 28, 53), CRGB(175, 28, 53), CRGB(227, 189, 102), CRGB(175, 28, 53), CRGB(134, 13, 33), CRGB(134, 13, 33), CRGB(96, 10, 24), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(175, 28, 53), CRGB(145, 15, 36), CRGB(175, 28, 53), CRGB(175, 28, 53), CRGB(175, 28, 53), CRGB(227, 189, 102), CRGB(235, 206, 138), CRGB(227, 189, 102), CRGB(175, 28, 53), CRGB(134, 13, 33), CRGB(96, 10, 24), CRGB(96, 10, 24), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(145, 15, 36), CRGB(170, 32, 55), CRGB(145, 15, 36), CRGB(170, 32, 55), CRGB(145, 15, 36), CRGB(175, 28, 53), CRGB(227, 189, 102), CRGB(175, 28, 53), CRGB(175, 28, 53), CRGB(132, 11, 31), CRGB(96, 10, 24), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(145, 15, 36), CRGB(145, 15, 36), CRGB(34, 58, 7), CRGB(132, 11, 31), CRGB(175, 28, 53), CRGB(175, 28, 53), CRGB(175, 28, 53), CRGB(132, 11, 31), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(61, 99, 21), CRGB(61, 99, 21), CRGB(34, 58, 7), CRGB(132, 11, 31), CRGB(175, 28, 53), CRGB(175, 28, 53), CRGB(132, 11, 31), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(61, 99, 21), CRGB(61, 99, 21), CRGB(61, 99, 21), CRGB(0, 0, 0), CRGB(132, 11, 31), CRGB(175, 28, 53), CRGB(132, 11, 31), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(61, 99, 21), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(132, 11, 31), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0)
        };

  CRGB iLoveYou[NUM_LEDS] = {
    CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(0, 0, 0), CRGB(255, 0, 0), CRGB(255, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(255, 255, 255), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0)
  };
#if !defined(CONFIG_BT_ENABLED) || !defined(CONFIG_BLUEDROID_ENABLED)
#error Bluetooth is not enabled! Please run `make menuconfig` to and enable it
#endif

// Check Serial Port Profile
#if !defined(CONFIG_BT_SPP_ENABLED)
#error Serial Port Profile for Bluetooth is not available or not enabled. It is only available for the ESP32 chip.
#endif

BluetoothSerial SerialBT;

void setup() {
  SerialBT.begin(device_name);
  FastLED.addLeds<WS2812,DATA_PIN,GRB>(leds,NUM_LEDS);   // Was RGB before. Change back if needed
	FastLED.setBrightness(32);
  //SerialBT.deleteAllBondedDevices(); // Uncomment this to delete paired devices; Must be called after begin
}

static uint32_t seed = 12345;
uint32_t fast_random() {   //   pseudoRand
    seed = (1664525 * seed + 1013904223);
    return seed >> 16;
}

void fadeall() { for(int i = 0; i < NUM_LEDS; i++) { leds[i].nscale8(250); } }

void display_static(){
    for(int i = 0; i < NUM_LEDS; i++) { 
      short randomBrightness = fast_random() % 128;
      leds[i] = CRGB(randomBrightness, randomBrightness, randomBrightness); }
      delay(50);
    FastLED.show();
}

short calculateIndex(short x, short y) {
    // If the row is even, map left-to-right
    if (y % 2 == 0) {
        return y * LEDS_PER_LINE + x;
    } 
    // If the row is odd, map right-to-left
    else {
        return y * LEDS_PER_LINE + (LEDS_PER_LINE - 1 - x);
    }
}

void displayImage(CRGB image[NUM_LEDS]) {
    for (short y = 0; y < LINES; y++) {
        for (short x = 0; x < LEDS_PER_LINE; x++) {
            short index = calculateIndex(x, y);
            leds[index] = image[y * LEDS_PER_LINE + x];
        }
    }
    FastLED.show();
}

void loop() {
	static uint8_t hue = 0;

  if (SerialBT.available()) {
    num_string = "";

while (SerialBT.available()) {
        char incomingChar = (char)SerialBT.read();
        if (incomingChar == '\n') {
            break;
        }
        num_string += incomingChar;
    }
  }
    num = num_string.toInt();
    num %= 18;

    switch (num){
      case 1:
        for (int i = 0; i < NUM_LEDS; i++) {
          leds[i] = CRGB::Red;
          }
        FastLED.show();
        break;

      case 2:
        for (int i = 0; i < NUM_LEDS; i++) {
          leds[i] = CRGB::Green;
          }
        FastLED.show();
        break;

      case 3:
        for (int i = 0; i < NUM_LEDS; i++){
          leds[i] = CRGB::Blue;
        }
        FastLED.show();
        break;

      case 4:
        displayImage(heart);
        break;

      case 5:
        display_static();
        break;

      case 6:
        displayImage(intermission);
        break;

      case 7:
        displayImage(face3);
        currenttime=millis(); 
        if ((currenttime % BLINK_TIME) <= 50)
            {displayImage(face3B1);
            delay(50);
            displayImage(face3B2);
            delay(50);            
            displayImage(face3B3);
            delay(50);
            displayImage(face3B3);
            delay(50);
            displayImage(face3B2);
            delay(50);            
            displayImage(face3B1);
            delay(50);
            }
        break;

      case 8:
        displayImage(face1);
        currenttime=millis(); 
        if ((currenttime % BLINK_TIME) <= 50)
            {displayImage(face1B1);
            delay(50);
            displayImage(face1B2);
            delay(50);            
            displayImage(face1B3);
            delay(50);
            displayImage(face1B3);
            delay(50);
            displayImage(face1B2);
            delay(50);            
            displayImage(face1B1);
            delay(50);
            }
        break;

      case 9:
        display_static();
        break;
      case 10:
        displayImage(flower);
        break;
      case 11:
        displayImage(dino);
        break;
      case 12:
        displayImage(eye);
        break;
      case 13:
        displayImage(iLoveYou);
        break;

      default:
        for (int i = 0; i < NUM_LEDS; i++) {
          leds[i] = CHSV(hue++, 255, 255);
          }
        FastLED.show();
        fadeall();
        delay(50);
        break;
    }
}
